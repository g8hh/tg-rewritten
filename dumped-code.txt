code because i might need it at some point





let u = game.upgrades
let r = game.rupgrades
let c = game.choice.choices
let t = game.inTrial
let choiceBroken = (t == 1 || t == 3 || t == 7)
let a = game.aupgrades
if ((choiceBroken && t != 7) || t == 4) r = []
if (choiceBroken) c = []
if (t == 7) r = r.filter(x => x < 40)










let mult1 = game.rupgrades.includes(24) ? 50 : 1,
		mult2 = game.rupgrades.includes(34) ? 100 : 1,
		mult3 = game.rupgrades.includes(44) ? 1e5 : 1,
		xmult = D.max(1, new D(game.x.amount.div(1e20).log10()).pow(1/(game.choice.choices[1] == 1 || game.choice.choices[1] == 3 ? 2 : 4)).floor()),
		ymult = D.max(1, new D(game.y.amount.div(1e15).log10()).pow(1/(game.choice.choices[1] == 1 || game.choice.choices[1] == 2 ? 2 : 3)).floor()),
		zmult = D.max(1, game.choice.choices[1] == 2 || game.choice.choices[1] == 3 ? game.z.amount.log10() : 1),
		_4mult= 1,
		x2mult= game.choice.choices[4] == 1 ? new D(game.x.amount.log10()) : 1,
		y2mult= game.choice.choices[4] == 2 ? new D(game.y.amount.log10()) : 1,
		z2mult= game.choice.choices[4] == 3 ? new D(game.z.amount.log2()) : 1,
		tr	= [0,1,2,3,4,5,6,7].map(n => Math.max(1, game.trials[n] * 10)),
		tm	= new D(1),
		amul1 = new D(game.trials.reduce((a, b) => a + b, 0)).pow(7.5)
		amul2 = new D(3e33)
	tr.map(x => tm = tm.mul(x))
	if (game.choice.choices[3] == 1) _4mult = 100 ** game.choice.choices.filter(x => x == 3).length
	if (game.choice.choices[3] == 2) _4mult = 100 ** game.choice.choices.filter(x => x == 2).length
	if (game.choice.choices[3] == 3) _4mult = 100 ** game.choice.choices.filter(x => x == 1).length*/
	/*return new D(game.z.amount.div(game.choice.choices[0] == 1 ? 1 : 1e10).log10())
		.pow((game.choice.choices[0] == 2 ? 3/4 : 1/2)).floor()
		.times(mult1).times(mult2).times(mult3)
		.times(game.rupgrades.includes(31) ? xmult : 1)
		.times(game.rupgrades.includes(41) ? ymult : 1)
		.times(zmult).times(_4mult)
		.times(x2mult).times(y2mult).times(z2mult)
		.times(tm)
		.pow(game.rupgrades.includes(45) ? 2 : 1)
		.times(game.rupgrades.includes(55) ? D.max(new D(game.rp.amount.log10()), 1) : 1)
		.times(game.rupgrades.includes(75) ? D.max(new D(game.rp.amount.log2()), 1) : 1)
		.times(game.rupgrades.includes(95) ? D.max(new D(game.rp.amount.pow(.1)), 1) : 1)
		.times(game.aupgrades.includes(1) ? amul1 : 1)
		.times(game.aupgrades.includes(3) ? amul2 : 1)










            <tr>
				<td><button class="btn btn-cleft-locked"  id="c11" onclick="buyC(1,1)">.</button></td>
				<td><button class="btn btn-cmid-locked"   id="c12" onclick="buyC(1,2)">.</button></td>
				<td><button class="btn btn-cright-locked" id="c13" onclick="buyC(1,3)">.</button></td>
				<td><button class="btn btn-bought" onclick="respec()">Respec Choice Tree.</button></td>
				<td><button class="btn btn-rebirth-locked" id="r75" onclick="buyreb(75)">.</button></td>
            </tr>
            <tr>
				<td></td>
				<td><button class="btn btn-creg-locked" id="c22" onclick="buyC(2)">.</button></td>
				<td></td>
				<td></td>
				<td><button class="btn btn-rebirth-locked" id="r85" onclick="buyreb(85)">.</button></td>
            </tr>
            <tr>
				<td><button class="btn btn-cleft-locked"  id="c31" onclick="buyC(3,1)">.</button></td>
				<td><button class="btn btn-cmid-locked"   id="c32" onclick="buyC(3,2)">.</button></td>
				<td><button class="btn btn-cright-locked" id="c33" onclick="buyC(3,3)">.</button></td>
				<td></td>
				<td><button class="btn btn-rebirth-locked" id="r95" onclick="buyreb(95)">.</button></td>
            </tr>
            <tr>
				<td></td>
				<td><button class="btn btn-creg-locked" id="c42" onclick="buyC(4)">.</button></td>
				<td></td>
				<td></td>
				<td><button class="btn btn-rebirth-locked" id="r105" onclick="buyreb(105)">.</button></td>
            </tr>
            <tr>
				<td><button class="btn btn-cleft-locked"  id="c51" onclick="buyC(5,1)">.</button></td>
				<td><button class="btn btn-cmid-locked"   id="c52" onclick="buyC(5,2)">.</button></td>
				<td><button class="btn btn-cright-locked" id="c53" onclick="buyC(5,3)">.</button></td>
				<td></td>
				<td><button class="btn btn-rebirth-locked" id="r115" onclick="buyreb(115)">.</button></td>
            </tr>
            <tr>
                <td></td>
                <td><button class="btn btn-creg-locked" id="c62" onclick="buyC(6)">.</button></td>
                <td></td>
                <td></td>
                <td><button class="btn btn-rebirth-locked" id="r125" onclick="buyreb(125)">.</button></td>
            </tr>
            <tr>
                <td><button class="btn btn-cleft-locked"  id="c71" onclick="buyC(7,1)">.</button></td>
                <td><button class="btn btn-cmid-locked"   id="c72" onclick="buyC(7,2)">.</button></td>
                <td><button class="btn btn-cright-locked" id="c73" onclick="buyC(7,3)">.</button></td>
                <td></td>
                <td><button class="btn btn-rebirth-locked" id="r135" onclick="buyreb(135)">.</button></td>
            </tr>
            <tr>
                <td></td>
                <td><button class="btn btn-creg-locked" id="c82" onclick="buyC(8)">.</button></td>
                <td></td>
                <td></td>
                <td><button class="btn btn-rebirth-locked" id="r145" onclick="buyreb(145)">.</button></td>
            </tr>
            <tr>
                <td><button class="btn btn-cleft-locked"  id="c91" onclick="buyC(9,1)">.</button></td>
                <td><button class="btn btn-cmid-locked"   id="c92" onclick="buyC(9,2)">.</button></td>
                <td><button class="btn btn-cright-locked" id="c93" onclick="buyC(9,3)">.</button></td>
                <td></td>
                <td><button class="btn btn-rebirth-locked" id="r155" onclick="buyreb(155)">.</button></td>
            </tr>
            <tr>
                <td></td>
                <td><button class="btn btn-creg-locked" id="c102" onclick="buyC(10)">.</button></td>
                <td></td>
                <td></td>
                <td><button class="btn btn-rebirth-unbought" id="r165">.</button></td>
            </tr>
            <tr>
                <td><button class="btn btn-cleft-locked"  id="c111" onclick="buyC(11,1)">.</button></td>
                <td><button class="btn btn-cmid-locked"   id="c112" onclick="buyC(11,2)">.</button></td>
                <td><button class="btn btn-cright-locked" id="c113" onclick="buyC(11,3)">.</button></td>
                <td></td>
                <td><button class="btn btn-rebirth-unbought" id="r175">.</button></td>
            </tr>
            <tr>
                <td></td>
                <td><button class="btn btn-creg-locked" id="c122" onclick="unlockTrialTree()">Unlock Trial Tree. (WIP)</button></td>
                <td></td>
                <td></td>
                <td><button class="btn btn-rebirth-unbought" id="r185">.</button></td>
            </tr>











function updateChoiceUpgrades() {
	for (let i = choiceUpgrades.start; i < choiceUpgrades.end + 2; i++) {
		if (choiceUpgrades[`${i}1`] !== undefined) {
			for (let j = 1; j < 4; j++) {
				document.getElementById(`c${i}${j}`).innerHTML = `${
					choiceUpgrades[`${i}${j}`]
				}<br>Cost: ${not.format(choiceCosts[i - 1], 2, 0)}"&hairsp;RP"`;
			}
		} else if (choiceUpgrades[`${i}2`] === null) {
			document.getElementById(`c${i}2`).innerHTML =
				"Regroup.<br>Cost: Free";
		}
	}
	$("#c122").innerHTML = `Unlock Trial Tree.<br>Cost: ${not.format(
		1e32,
		2,
		0
	)}&hairsp;RP`;
}











	// Choice
	if (can === "reb") {
		for (let i = choiceUpgrades.start; i < choiceUpgrades.end + 1; i++) {
			if (choiceCosts[i - 1].eq(0)) {
				for (let j = 1; j < 4; j++) {
					drawTreeBranch(`${i}2`, `${i + 1}${j}`, "c");
				}
			} else {
				for (let j = 1; j < 4; j++) {
					drawTreeBranch(`${i}${j}`, `${i + 1}2`, "c");
				}
			}
		}
		drawTreeBranch(111, 122, "c");
		drawTreeBranch(112, 122, "c");
		drawTreeBranch(113, 122, "c");
	}










/*
0 1 2 3 8
4 5 6 7 9
*/

.btn-trial {
	color: black;
}

#t0 {
	background-color: #ff0000;
}
#t1,
#t4 {
	background-color: #ff8800;
}
#t2,
#t5 {
	background-color: #ffff00;
}
#t3,
#t6 {
	background-color: #88ff00;
}
#t8,
#t7 {
	background-color: #00ff88;
}
#t9 {
	background-color: #00ffff;
}










.btn-cleft-bought {
	background-color: red;
}

.btn-cleft-unbought {
	background-color: rgb(190, 0, 0);
}

.btn-cleft-locked {
	background-color: rgb(100, 0, 0);
}

.btn-cmid-bought {
	background-color: rgb(0, 255, 0);
}

.btn-cmid-unbought {
	background-color: rgb(0, 190, 0);
}

.btn-cmid-locked {
	background-color: rgb(0, 100, 0);
}

.btn-cright-bought {
	background-color: blue;
}

.btn-cright-unbought {
	background-color: rgb(0, 0, 190);
}

.btn-cright-locked {
	background-color: rgb(0, 0, 100);
}

.btn-creg-bought {
	background-color: yellow;
}

.btn-creg-unbought {
	background-color: rgb(190, 190, 0);
}

.btn-creg-locked {
	background-color: rgb(100, 100, 0);
}
